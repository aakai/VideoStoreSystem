
import java.sql.*;
import javax.swing.*;
import java.util.logging.*;
import java.util.Date.*;
import java.util.Random;
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MakeReservation.java
 *
 * Created on Nov 27, 2011, 7:27:27 AM
 */
/**
 *
 * @author anearcan
 */
public class MakeReservation extends javax.swing.JFrame {
    private Employee employee;
    private MemberAccount member;
    private Item item;
    private ReservationControl rControl;
    private java.util.Date today;
    private java.util.Date pickUp;
    private Random rID;
    
    /** Creates new form MakeReservation */
    public MakeReservation() {
        initComponents();
        employee = new Employee();
        today = new java.util.Date();
        rID = new Random();
        item = new  Item();
    }

    MakeReservation(Employee employee) {
        initComponents();
        this.employee = employee;
        today = new java.util.Date();
        rID = new Random();
        item = new  Item();
    }

    MakeReservation(Employee employee, MemberAccount member) {
        initComponents();
        this.employee = employee;
        this.member = member;
        memberId.setText(Integer.toString(member.getMemberID()));
        rID = new Random();    
        item = new  Item();
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        itemType = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        itemTitle = new javax.swing.JTextField();
        reserveButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        memberId = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Making Reservation");

        jLabel2.setText("Enter Item Title");

        itemType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Game", "Movie" }));
        itemType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemTypeActionPerformed(evt);
            }
        });

        jLabel3.setText("Type of item");

        itemTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemTitleActionPerformed(evt);
            }
        });

        reserveButton.setText("Reserve");
        reserveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("MemberID");

        memberId.setDisplayedMnemonic('M');
        memberId.setText("2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(29, 29, 29)
                        .addComponent(itemType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(itemTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(memberId)))
                .addContainerGap(138, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(317, Short.MAX_VALUE)
                .addComponent(reserveButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(memberId))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(itemType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(itemTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                .addComponent(reserveButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void reserveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveButtonActionPerformed
// TODO add your handling code here:
    if(((String)itemType.getSelectedItem()).equals("Game")){
        item = queryGame(itemTitle.getText());
    }else if(((String)itemType.getSelectedItem()).equals("Movie")){
        item = queryMovie(itemTitle.getText());
    }
    Reservation reservation = rControl.makeReservation(item, member, rID.nextInt(1000),pickUp , today, (String)itemType.getSelectedItem());
    new ReservationInformation(employee, member, reservation.getReservationId()).setVisible(true);
    this.setVisible(false);
}//GEN-LAST:event_reserveButtonActionPerformed

private void itemTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemTypeActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_itemTypeActionPerformed

private void itemTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemTitleActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_itemTitleActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MakeReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MakeReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MakeReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MakeReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MakeReservation().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField itemTitle;
    private javax.swing.JComboBox itemType;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel memberId;
    private javax.swing.JButton reserveButton;
    // End of variables declaration//GEN-END:variables

    private Video queryMovie(String title) {
        Video movie = null;
        String query = "SELECT * FROM movies WHERE Title = '" + title+"'";

        try {
            new Utility().connect();
            ResultSet rs = new Utility().stmt.executeQuery(query);

            while (rs.next()) {
                movie = new Video(rs.getInt("id"), title, rs.getInt("rentalPrice"), rs.getInt("purchasePrice"));
                movie.setNoOfCopies(rs.getInt("noOfCopies"));
            } //end while

            new Utility().con.close();
        } //end try

        catch(ClassNotFoundException e) { e.printStackTrace();}
        catch(SQLException e) { e.printStackTrace(); }
        
        return movie;
    }

    private Game queryGame(String title) {
        Game game = null;
        String query = "SELECT * FROM movies WHERE Title = " + title;

        try {
            new Utility().connect();
            ResultSet rs = new Utility().stmt.executeQuery(query);

            while (rs.next()) {
                game = new Game(rs.getInt("id"), title, rs.getInt("rentalPrice"), rs.getInt("purchasePrice"));
                game.setNoOfCopies(rs.getInt("noOfCopies"));
            } //end while

            new Utility().con.close();
        } //end try

        catch(ClassNotFoundException e) { e.printStackTrace();}
        catch(SQLException e) { e.printStackTrace(); }
        
       
        return game;
    }
}
